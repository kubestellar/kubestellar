apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/enhancements/pull/1111
  creationTimestamp: null
  name: csinodes.storage.k8s.io
spec:
  conversion:
    strategy: None
  group: storage.k8s.io
  names:
    kind: CSINode
    listKind: CSINodeList
    plural: csinodes
    singular: csinode
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CSINode holds information about all CSI drivers installed on
          a node. CSI drivers do not need to create the CSINode object directly. As
          long as they use the node-driver-registrar sidecar container, the kubelet
          will automatically populate the CSINode object for the CSI driver as part
          of kubelet plugin registration. CSINode has the same name as a node. If
          the object is missing, it means either there are no CSI Drivers available
          on the node, or the Kubelet version is low enough that it doesn't create
          this object. CSINode has an OwnerReference that points to the corresponding
          node object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec is the specification of CSINode
            properties:
              drivers:
                description: drivers is a list of information of all CSI Drivers existing
                  on a node. If all drivers in the list are uninstalled, this can
                  become empty.
                items:
                  description: CSINodeDriver holds information about the specification
                    of one CSI driver installed on a node
                  properties:
                    allocatable:
                      description: allocatable represents the volume resources of
                        a node that are available for scheduling. This field is beta.
                      properties:
                        count:
                          description: Maximum number of unique volumes managed by
                            the CSI driver that can be used on a node. A volume that
                            is both attached and mounted on a node is considered to
                            be used once, not twice. The same rule applies for a unique
                            volume that is shared among multiple pods on the same
                            node. If this field is not specified, then the supported
                            number of volumes on this node is unbounded.
                          format: int32
                          type: integer
                      type: object
                    name:
                      description: This is the name of the CSI driver that this object
                        refers to. This MUST be the same name returned by the CSI
                        GetPluginName() call for that driver.
                      type: string
                    nodeID:
                      description: nodeID of the node from the driver point of view.
                        This field enables Kubernetes to communicate with storage
                        systems that do not share the same nomenclature for nodes.
                        For example, Kubernetes may refer to a given node as "node1",
                        but the storage system may refer to the same node as "nodeA".
                        When Kubernetes issues a command to the storage system to
                        attach a volume to a specific node, it can use this field
                        to refer to the node name using the ID that the storage system
                        will understand, e.g. "nodeA" instead of "node1". This field
                        is required.
                      type: string
                    topologyKeys:
                      description: topologyKeys is the list of keys supported by the
                        driver. When a driver is initialized on a cluster, it provides
                        a set of topology keys that it understands (e.g. "company.com/zone",
                        "company.com/region"). When a driver is initialized on a node,
                        it provides the same topology keys along with values. Kubelet
                        will expose these topology keys as labels on its own node
                        object. When Kubernetes does topology aware provisioning,
                        it can use this list to determine which labels it should retrieve
                        from the node object and pass back to the driver. It is possible
                        for different nodes to use different topology keys. This can
                        be empty if driver does not support topology.
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  - nodeID
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - drivers
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
