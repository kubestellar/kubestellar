apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/enhancements/pull/1111
  creationTimestamp: null
  name: prioritylevelconfigurations.flowcontrol.apiserver.k8s.io
spec:
  conversion:
    strategy: None
  group: flowcontrol.apiserver.k8s.io
  names:
    kind: PriorityLevelConfiguration
    listKind: PriorityLevelConfigurationList
    plural: prioritylevelconfigurations
    singular: prioritylevelconfiguration
  scope: Cluster
  versions:
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: PriorityLevelConfiguration represents the configuration of a
          priority level.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: '`spec` is the specification of the desired behavior of a
              "request-priority". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              limited:
                description: '`limited` specifies how requests are handled for a Limited
                  priority level. This field must be non-empty if and only if `type`
                  is `"Limited"`.'
                properties:
                  assuredConcurrencyShares:
                    description: |-
                      `assuredConcurrencyShares` (ACS) configures the execution limit, which is a limit on the number of requests of this priority level that may be exeucting at a given time.  ACS must be a positive number. The server's concurrency limit (SCL) is divided among the concurrency-controlled priority levels in proportion to their assured concurrency shares. This produces the assured concurrency value (ACV) --- the number of requests that may be executing at a time --- for each such priority level:

                                  ACV(l) = ceil( SCL * ACS(l) / ( sum[priority levels k] ACS(k) ) )

                      bigger numbers of ACS mean more reserved concurrent requests (at the expense of every other PL). This field has a default value of 30.
                    format: int32
                    type: integer
                  limitResponse:
                    description: '`limitResponse` indicates what to do with requests
                      that can not be executed right now'
                    properties:
                      queuing:
                        description: '`queuing` holds the configuration parameters
                          for queuing. This field may be non-empty only if `type`
                          is `"Queue"`.'
                        properties:
                          handSize:
                            description: '`handSize` is a small positive number that
                              configures the shuffle sharding of requests into queues.  When
                              enqueuing a request at this priority level the request''s
                              flow identifier (a string pair) is hashed and the hash
                              value is used to shuffle the list of queues and deal
                              a hand of the size specified here.  The request is put
                              into one of the shortest queues in that hand. `handSize`
                              must be no larger than `queues`, and should be significantly
                              smaller (so that a few heavy flows do not saturate most
                              of the queues).  See the user-facing documentation for
                              more extensive guidance on setting this field.  This
                              field has a default value of 8.'
                            format: int32
                            type: integer
                          queueLengthLimit:
                            description: '`queueLengthLimit` is the maximum number
                              of requests allowed to be waiting in a given queue of
                              this priority level at a time; excess requests are rejected.  This
                              value must be positive.  If not specified, it will be
                              defaulted to 50.'
                            format: int32
                            type: integer
                          queues:
                            description: '`queues` is the number of queues for this
                              priority level. The queues exist independently at each
                              apiserver. The value must be positive.  Setting it to
                              1 effectively precludes shufflesharding and thus makes
                              the distinguisher method of associated flow schemas
                              irrelevant.  This field has a default value of 64.'
                            format: int32
                            type: integer
                        type: object
                      type:
                        description: '`type` is "Queue" or "Reject". "Queue" means
                          that requests that can not be executed upon arrival are
                          held in a queue until they can be executed or a queuing
                          limit is reached. "Reject" means that requests that can
                          not be executed upon arrival are rejected. Required.'
                        type: string
                    required:
                    - type
                    type: object
                type: object
              type:
                description: '`type` indicates whether this priority level is subject
                  to limitation on request execution.  A value of `"Exempt"` means
                  that requests of this priority level are not subject to a limit
                  (and thus are never queued) and do not detract from the capacity
                  made available to other priority levels.  A value of `"Limited"`
                  means that (a) requests of this priority level _are_ subject to
                  limits and (b) some of the server''s limited capacity is made available
                  exclusively to this priority level. Required.'
                type: string
            required:
            - type
            type: object
          status:
            description: '`status` is the current status of a "request-priority".
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: '`conditions` is the current state of "request-priority".'
                items:
                  description: PriorityLevelConfigurationCondition defines the condition
                    of priority level.
                  properties:
                    lastTransitionTime:
                      description: '`lastTransitionTime` is the last time the condition
                        transitioned from one status to another.'
                      format: date-time
                      type: string
                    message:
                      description: '`message` is a human-readable message indicating
                        details about last transition.'
                      type: string
                    reason:
                      description: '`reason` is a unique, one-word, CamelCase reason
                        for the condition''s last transition.'
                      type: string
                    status:
                      description: '`status` is the status of the condition. Can be
                        True, False, Unknown. Required.'
                      type: string
                    type:
                      description: '`type` is the type of the condition. Required.'
                      type: string
                  required:
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta2
