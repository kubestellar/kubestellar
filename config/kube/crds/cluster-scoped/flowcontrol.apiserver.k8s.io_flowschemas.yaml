apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/enhancements/pull/1111
  creationTimestamp: null
  name: flowschemas.flowcontrol.apiserver.k8s.io
spec:
  conversion:
    strategy: None
  group: flowcontrol.apiserver.k8s.io
  names:
    kind: FlowSchema
    listKind: FlowSchemaList
    plural: flowschemas
    singular: flowschema
  scope: Cluster
  versions:
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: 'FlowSchema defines the schema of a group of flows. Note that
          a flow is made up of a set of inbound API requests with similar attributes
          and is identified by a pair of strings: the name of the FlowSchema and a
          "flow distinguisher".'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: '`spec` is the specification of the desired behavior of a
              FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              distinguisherMethod:
                description: '`distinguisherMethod` defines how to compute the flow
                  distinguisher for requests that match this schema. `nil` specifies
                  that the distinguisher is disabled and thus will always be the empty
                  string.'
                properties:
                  type:
                    description: '`type` is the type of flow distinguisher method
                      The supported types are "ByUser" and "ByNamespace". Required.'
                    type: string
                required:
                - type
                type: object
              matchingPrecedence:
                description: '`matchingPrecedence` is used to choose among the FlowSchemas
                  that match a given request. The chosen FlowSchema is among those
                  with the numerically lowest (which we take to be logically highest)
                  MatchingPrecedence.  Each MatchingPrecedence value must be ranged
                  in [1,10000]. Note that if the precedence is not specified, it will
                  be set to 1000 as default.'
                format: int32
                type: integer
              priorityLevelConfiguration:
                description: '`priorityLevelConfiguration` should reference a PriorityLevelConfiguration
                  in the cluster. If the reference cannot be resolved, the FlowSchema
                  will be ignored and marked as invalid in its status. Required.'
                properties:
                  name:
                    description: '`name` is the name of the priority level configuration
                      being referenced Required.'
                    type: string
                required:
                - name
                type: object
              rules:
                description: '`rules` describes which requests will match this flow
                  schema. This FlowSchema matches a request if and only if at least
                  one member of rules matches the request. if it is an empty slice,
                  there will be no requests matching the FlowSchema.'
                items:
                  description: PolicyRulesWithSubjects prescribes a test that applies
                    to a request to an apiserver. The test considers the subject making
                    the request, the verb being requested, and the resource to be
                    acted upon. This PolicyRulesWithSubjects matches a request if
                    and only if both (a) at least one member of subjects matches the
                    request and (b) at least one member of resourceRules or nonResourceRules
                    matches the request.
                  properties:
                    nonResourceRules:
                      description: '`nonResourceRules` is a list of NonResourcePolicyRules
                        that identify matching requests according to their verb and
                        the target non-resource URL.'
                      items:
                        description: NonResourcePolicyRule is a predicate that matches
                          non-resource requests according to their verb and the target
                          non-resource URL. A NonResourcePolicyRule matches a request
                          if and only if both (a) at least one member of verbs matches
                          the request and (b) at least one member of nonResourceURLs
                          matches the request.
                        properties:
                          nonResourceURLs:
                            description: |-
                              `nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:
                                - "/healthz" is legal
                                - "/hea*" is illegal
                                - "/hea" is legal but matches nothing
                                - "/hea/*" also matches nothing
                                - "/healthz/*" matches all per-component health checks.
                              "*" matches all non-resource urls. if it is present, it must be the only entry. Required.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          verbs:
                            description: '`verbs` is a list of matching verbs and
                              may not be empty. "*" matches all verbs. If it is present,
                              it must be the only entry. Required.'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        required:
                        - verbs
                        - nonResourceURLs
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    resourceRules:
                      description: '`resourceRules` is a slice of ResourcePolicyRules
                        that identify matching requests according to their verb and
                        the target resource. At least one of `resourceRules` and `nonResourceRules`
                        has to be non-empty.'
                      items:
                        description: 'ResourcePolicyRule is a predicate that matches
                          some resource requests, testing the request''s verb and
                          the target resource. A ResourcePolicyRule matches a resource
                          request if and only if: (a) at least one member of verbs
                          matches the request, (b) at least one member of apiGroups
                          matches the request, (c) at least one member of resources
                          matches the request, and (d) either (d1) the request does
                          not specify a namespace (i.e., `Namespace==""`) and clusterScope
                          is true or (d2) the request specifies a namespace and least
                          one member of namespaces matches the request''s namespace.'
                        properties:
                          apiGroups:
                            description: '`apiGroups` is a list of matching API groups
                              and may not be empty. "*" matches all API groups and,
                              if present, must be the only entry. Required.'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          clusterScope:
                            description: '`clusterScope` indicates whether to match
                              requests that do not specify a namespace (which happens
                              either because the resource is not namespaced or the
                              request targets all namespaces). If this field is omitted
                              or false then the `namespaces` field must contain a
                              non-empty list.'
                            type: boolean
                          namespaces:
                            description: '`namespaces` is a list of target namespaces
                              that restricts matches.  A request that specifies a
                              target namespace matches only if either (a) this list
                              contains that target namespace or (b) this list contains
                              "*".  Note that "*" matches any specified namespace
                              but does not match a request that _does not specify_
                              a namespace (see the `clusterScope` field for that).
                              This list may be empty, but only if `clusterScope` is
                              true.'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          resources:
                            description: '`resources` is a list of matching resources
                              (i.e., lowercase and plural) with, if desired, subresource.  For
                              example, [ "services", "nodes/status" ].  This list
                              may not be empty. "*" matches all resources and, if
                              present, must be the only entry. Required.'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          verbs:
                            description: '`verbs` is a list of matching verbs and
                              may not be empty. "*" matches all verbs and, if present,
                              must be the only entry. Required.'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        required:
                        - verbs
                        - apiGroups
                        - resources
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    subjects:
                      description: subjects is the list of normal user, serviceaccount,
                        or group that this rule cares about. There must be at least
                        one member in this slice. A slice that includes both the system:authenticated
                        and system:unauthenticated user groups matches every request.
                        Required.
                      items:
                        description: Subject matches the originator of a request,
                          as identified by the request authentication system. There
                          are three ways of matching an originator; by user, group,
                          or service account.
                        properties:
                          group:
                            description: '`group` matches based on user group name.'
                            properties:
                              name:
                                description: name is the user group that matches,
                                  or "*" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go
                                  for some well-known group names. Required.
                                type: string
                            required:
                            - name
                            type: object
                          kind:
                            description: '`kind` indicates which one of the other
                              fields is non-empty. Required'
                            type: string
                          serviceAccount:
                            description: '`serviceAccount` matches ServiceAccounts.'
                            properties:
                              name:
                                description: '`name` is the name of matching ServiceAccount
                                  objects, or "*" to match regardless of name. Required.'
                                type: string
                              namespace:
                                description: '`namespace` is the namespace of matching
                                  ServiceAccount objects. Required.'
                                type: string
                            required:
                            - namespace
                            - name
                            type: object
                          user:
                            description: '`user` matches based on username.'
                            properties:
                              name:
                                description: '`name` is the username that matches,
                                  or "*" to match all usernames. Required.'
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - kind
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - subjects
                  type: object
                type: array
                x-kubernetes-list-type: atomic
            required:
            - priorityLevelConfiguration
            type: object
          status:
            description: '`status` is the current status of a FlowSchema. More info:
              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: '`conditions` is a list of the current states of FlowSchema.'
                items:
                  description: FlowSchemaCondition describes conditions for a FlowSchema.
                  properties:
                    lastTransitionTime:
                      description: '`lastTransitionTime` is the last time the condition
                        transitioned from one status to another.'
                      format: date-time
                      type: string
                    message:
                      description: '`message` is a human-readable message indicating
                        details about last transition.'
                      type: string
                    reason:
                      description: '`reason` is a unique, one-word, CamelCase reason
                        for the condition''s last transition.'
                      type: string
                    status:
                      description: '`status` is the status of the condition. Can be
                        True, False, Unknown. Required.'
                      type: string
                    type:
                      description: '`type` is the type of the condition. Required.'
                      type: string
                  required:
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta2
