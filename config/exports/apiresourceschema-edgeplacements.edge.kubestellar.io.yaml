apiVersion: apis.kcp.io/v1alpha1
kind: APIResourceSchema
metadata:
  creationTimestamp: null
  name: v231026-b37310b41.edgeplacements.edge.kubestellar.io
spec:
  group: edge.kubestellar.io
  names:
    kind: EdgePlacement
    listKind: EdgePlacementList
    plural: edgeplacements
    shortNames:
    - epl
    singular: edgeplacement
  scope: Cluster
  versions:
  - name: v2alpha1
    schema:
      description: "EdgePlacement exists in the center and binds (a) a collection
        of Locations with (b) both (b1) objects in the center to downsync (propagate
        desired state from center to edge and return reported state from edge toward
        center), and (b2) a way of identifying objects (in edge clusters) to upsync
        (propagate from edge toward center). Both downsyncing and upsyncing are with
        all of the Locations.  This is not entirely unrelated to a TMC Placement,
        which directs the selected Namespaces to propagate to _one_ of the selected
        Locations. \n The objects to downsync are those in selected namespaces plus
        selected non-namespaced objects. \n For upsync, the matching objects originate
        in the edge clusters and propagate to the corresponding mailbox workspaces
        while summaries of them go to the workload management workspace (as prescribed
        by the summarization API). \n Overlap between EdgePlacements is allowed: two
        different EdgePlacement objects may select intersecting Location sets and/or
        intersecting Namespace sets. This is not problematic because: - propagation
        _into_ a destination is additive; - propagation _from_ a source is additive;
        - two directives to propagate the same object to the same destination are
        simply redundant (they, by design, can not conflict)."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: '`spec` describes a desired binding between workload and Locations.
            Unlike a TMC Placement, there is an inherent multiplicity and dynamicity
            in the set of Locations that will be synced to and this field never shifts
            into immutability.'
          properties:
            downsync:
              description: '`downsync` selects the objects to bind with the selected
                Locations for downsync. An object is selected if it matches at least
                one member of this list.'
              items:
                description: 'DownsyncObjectTest is a set of criteria that characterize
                  matching objects. An object matches if: - the `apiGroup` criterion
                  is satisfied; - the `resources` criterion is satisfied; - the `namespaces`
                  criterion is satisfied; - the `namespaceSelectors` criterion is
                  satisfied; - the `objectNames` criterion is satisfied; and - the
                  `labelSelectors` criterion is satisfied. At least one of the fields
                  must make some discrimination; it is not valid for every field to
                  match all objects. Validation might not be fully checked by apiservers
                  until the Kubernetes dependency is release 1.25; in the meantime
                  validation error messages will appear in annotations whose key is
                  `validation-error.kubestellar.io/{number}`.'
                properties:
                  apiGroup:
                    description: '`apiGroup` is the API group of the referenced object,
                      empty string for the core API group. `nil` matches every API
                      group.'
                    type: string
                  labelSelectors:
                    description: '`labelSelectors` is a list of label selectors. At
                      least one of them must match the labels of the object being
                      tested. Empty list is a special case, it matches every object.'
                    items:
                      description: A label selector is a label query over a set of
                        resources. The result of matchLabels and matchExpressions
                        are ANDed. An empty label selector matches all objects. A
                        null label selector matches no objects.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  namespaceSelectors:
                    description: '`namespaceSelectors` a list of label selectors.
                      For a namespaced object, at least one of these label selectors
                      has to match the labels of the Namespace object that defines
                      the namespace of the object that this DownsyncObjectTest is
                      testing. For a cluster-scoped object, at least one of these
                      label selectors must be `{}`. Empty list is a special case,
                      it matches every object.'
                    items:
                      description: A label selector is a label query over a set of
                        resources. The result of matchLabels and matchExpressions
                        are ANDed. An empty label selector matches all objects. A
                        null label selector matches no objects.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  namespaces:
                    description: '`namespaces` is a list of acceptable names for the
                      object''s namespace. An entry of `"*"` means that any namespace
                      is acceptable; this is the only way to match a cluster-scoped
                      object. If this list contains `"*"` then it should contain nothing
                      else. Empty list is a special case, it matches every object.'
                    items:
                      type: string
                    type: array
                  objectNames:
                    description: '`objectNames` is a list of object names that match.
                      An entry of `"*"` means that all match. If this list contains
                      `"*"` then it should contain nothing else. Empty list is a special
                      case, it matches every object.'
                    items:
                      type: string
                    type: array
                  resources:
                    description: '`resources` is a list of lowercase plural names
                      for the sorts of objects to match. An entry of `"*"` means that
                      all match. If this list contains `"*"` then it should contain
                      nothing else. Empty list is a special case, it matches every
                      object.'
                    items:
                      type: string
                    type: array
                required:
                - apiGroup
                type: object
              type: array
            locationSelectors:
              description: '`locationSelectors` identifies the relevant Location objects
                in terms of their labels. A Location is relevant if and only if it
                passes any of the LabelSelectors in this field.'
              items:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              type: array
            upsync:
              description: '`upsync` identifies objects to upsync. An object matches
                `upsync` if and only if it matches at least one member of `upsync`.'
              items:
                description: 'UpsyncSet specifies a set of objects, which may be namespaced
                  or cluster-scoped, from one particular API group. An object is in
                  this set if: - its API group is the one listed; - its resource (lowercase
                  plural form of object type) is one of those listed; - EITHER the
                  resource is cluster-scoped OR the object''s namespace matches `namespaces`;
                  and - the object''s name matches `names`.'
                properties:
                  apiGroup:
                    description: '`apiGroup` is the API group of the referenced object,
                      empty string for the core API group.'
                    type: string
                  names:
                    description: '`Names` is a list of objects that match by name.
                      An entry of `"*"` means that all match. Empty list means nothing
                      matches (you probably never want an empty list).'
                    items:
                      type: string
                    type: array
                  namespaces:
                    description: '`namespaces` is a list of acceptable namespaces.
                      An entry of `"*"` means that all match. Empty list means nothing
                      matches (you probably do not want this for namespaced resources).'
                    items:
                      type: string
                    type: array
                  resources:
                    description: '`resources` is a list of lowercase plural names
                      for the sorts of objects to match. An entry of `"*"` means that
                      all match. Empty list means nothing matches.'
                    items:
                      type: string
                    type: array
                required:
                - resources
                type: object
              type: array
            wantSingletonReportedState:
              description: WantSingletonReportedState indicates that (a) the number
                of selected locations is intended to be 1 and (b) the reported state
                of each downsynced object should be returned back to the object in
                this space. When multiple EdgePlacement objects match the same workload
                object, the OR of these booleans rules.
              type: boolean
          type: object
        status:
          description: '`status` describes the status of the process of binding workload
            to Locations.'
          properties:
            matchingLocationCount:
              description: '`matchingLocationCount` is the number of Locations that
                satisfy the spec''s `locationSelectors`.'
              format: int32
              type: integer
            specGeneration:
              description: '`specGeneration` identifies the generation of the spec
                that this is the status for. Zero means that no status has yet been
                written here.'
              format: int32
              type: integer
          required:
          - matchingLocationCount
          type: object
      type: object
    served: true
    storage: true
    subresources: {}
