# This workflow validates that PRs modifying website docs include proper preview setup.
# It works in conjunction with the auto-docs-preview workflow to ensure documentation PRs have previews.

name: Check Docs PR Preview Link

on:
  pull_request:
    types: [opened, edited, synchronize]
    paths:
      - 'docs/content/**'
      - 'docs/README.md'
      - 'docs/mkdocs.yml'
      - 'docs/overrides/**'
      - 'docs/scripts/**'
      - 'docs/requirements.txt'
      - 'docs/main.py'
      - 'SECURITY.md'
      - 'CODE_OF_CONDUCT.md'
      - 'GOVERNANCE.md'
      - 'ONBOARDING.md'

jobs:
  check-preview-link:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Check for Preview Link in PR Description
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.head_ref }}
        run: |
          set -e
          BODY=$(gh pr view "$PR_NUMBER" --json body -q '.body')
          DOC_BRANCH_REGEX='^doc-'
          OWNER=$(gh pr view "$PR_NUMBER" --json headRepositoryOwner -q '.headRepositoryOwner.login')
          REPO_NAME=$(gh pr view "$PR_NUMBER" --json headRepository -q '.headRepository.name')
          HEAD_REPO_FULL_NAME=$(gh pr view "$PR_NUMBER" --json headRepository -q '.headRepository.full_name')
          BASE_REPO_FULL_NAME="${{ github.repository }}"
          GITHUB_PAGES_URL="https://${OWNER}.github.io/${REPO_NAME}/${BRANCH}"
          GREEN=$'\033[0;32m'
          RED=$'\033[0;31m'
          YELLOW=$'\033[1;33m'
          BLUE=$'\033[0;34m'
          NC=$'\033[0m' # No Color

          # Check if this is from a fork
          IS_FROM_FORK=false
          if [[ "$HEAD_REPO_FULL_NAME" != "$BASE_REPO_FULL_NAME" ]]; then
            IS_FROM_FORK=true
          fi
          
          # Special case for testing the automation system itself
          IS_AUTOMATION_TEST=false
          if [[ "$OWNER" == "rishi-jat" && "$REPO_NAME" == "kubestellar" ]]; then
            IS_AUTOMATION_TEST=true
            echo "${BLUE}[INFO] Automation testing PR detected from rishi-jat/kubestellar${NC}"
          fi

          # Look for preview section (auto-generated or manual)
          if echo "$BODY" | grep -q "ðŸ“– Documentation Preview" || echo "$BODY" | grep -iE "(preview|Preview).*https?://" || [[ "$IS_AUTOMATION_TEST" == "true" ]]; then
            if [[ "$IS_AUTOMATION_TEST" == "true" ]]; then
              echo "${GREEN}[OK] Automation testing PR - preview validation bypassed.${NC}"
            else
              echo "${GREEN}[OK] Docs PR: Preview section found in PR description.${NC}"
            fi
            
            # Additional validation for fork-based PRs
            if [[ "$IS_FROM_FORK" == "true" ]]; then
              if [[ "$BRANCH" =~ $DOC_BRANCH_REGEX ]]; then
                echo "${GREEN}[OK] Fork PR with doc- branch naming convention detected.${NC}"
                echo "${BLUE}[INFO] Auto-preview should be available at: ${GITHUB_PAGES_URL}${NC}"
              else
                echo "${YELLOW}[WARN] Fork PR: Branch does not start with 'doc-'. Auto-preview may not work.${NC}"
                echo "${BLUE}[INFO] Consider renaming branch to 'doc-${BRANCH}' for automatic preview generation.${NC}"
              fi
            else
              echo "${BLUE}[INFO] PR from main repository - manual preview setup required.${NC}"
            fi
          else
            if [[ "$IS_FROM_FORK" == "true" ]]; then
              echo "${YELLOW}[WARN] Fork PR: No preview section found, but auto-preview workflow should handle this.${NC}"
              echo "${BLUE}[INFO] Expected auto-preview URL: ${GITHUB_PAGES_URL}${NC}"
              if [[ "$BRANCH" =~ $DOC_BRANCH_REGEX ]]; then
                echo "${GREEN}[OK] Branch follows doc- naming convention for auto-preview.${NC}"
              else
                echo "${YELLOW}[WARN] Branch should start with 'doc-' for automatic preview generation.${NC}"
              fi
            else
              echo "${RED}[ERROR] Main repo PR: No preview link found. Please include a preview of your changes.${NC}"
              echo "ðŸ‘‰ For instructions on how to create a preview, see:"
              echo "   https://docs.kubestellar.io/unreleased-development/contribution-guidelines/operations/document-management/#rendering-and-previewing-modifications-to-the-website"
              echo
              exit 1
            fi
          fi
          echo
