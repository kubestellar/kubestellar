name: Fuzz Testing

on:
  push:
    branches:
      - main
      - release-*
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '**/OWNERS'
      - '**/MAINTAINERS'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '**/OWNERS'
      - '**/MAINTAINERS'

env:
  FUZZ_TIME: "120s"  # Run each fuzzer for 2 minutes

jobs:
  fuzzing:
    name: Go Fuzzing Tests
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: 1.22.x
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Verify fuzz tests exist
        run: |
          echo "Checking for fuzz tests..."
          cd test/fuzz
          go test -list='Fuzz.*' | grep -E '^Fuzz' || echo "No fuzz tests found"

      - name: Run FuzzJSONPathParsing
        run: |
          cd test/fuzz
          timeout 150s go test -fuzz=FuzzJSONPathParsing -fuzztime=${{ env.FUZZ_TIME }} -test.fuzzcachedir=./fuzz_cache || true

      - name: Run FuzzCRDValidation
        run: |
          cd test/fuzz
          timeout 150s go test -fuzz=FuzzCRDValidation -fuzztime=${{ env.FUZZ_TIME }} -test.fuzzcachedir=./fuzz_cache || true

      - name: Run FuzzLabelParsing
        run: |
          cd test/fuzz
          timeout 150s go test -fuzz=FuzzLabelParsing -fuzztime=${{ env.FUZZ_TIME }} -test.fuzzcachedir=./fuzz_cache || true

      - name: Run FuzzAPIGroupParsing
        run: |
          cd test/fuzz
          timeout 150s go test -fuzz=FuzzAPIGroupParsing -fuzztime=${{ env.FUZZ_TIME }} -test.fuzzcachedir=./fuzz_cache || true

      - name: Run FuzzJSONValueValidation
        run: |
          cd test/fuzz
          timeout 150s go test -fuzz=FuzzJSONValueValidation -fuzztime=${{ env.FUZZ_TIME }} -test.fuzzcachedir=./fuzz_cache || true

      - name: Create failure artifacts directory
        if: failure()
        run: mkdir -p ./artifacts

      - name: Collect failure artifacts
        if: failure()
        run: |
          # Collect any crash files generated during fuzzing
          find . -name "testdata" -type d -exec find {} -name "crash*" -o -name "*.crasher" \; | head -20 | while read file; do
            if [ -f "$file" ]; then
              cp "$file" ./artifacts/ 2>/dev/null || true
            fi
          done
          
          # Collect fuzz cache information
          if [ -d "./test/fuzz/fuzz_cache" ]; then
            find ./test/fuzz/fuzz_cache -name "*.crash" | head -10 | while read file; do
              if [ -f "$file" ]; then
                cp "$file" ./artifacts/ 2>/dev/null || true
              fi
            done
          fi
          
          # Create a summary file
          echo "Fuzzing run failed at $(date)" > ./artifacts/failure_summary.txt
          echo "Go version: $(go version)" >> ./artifacts/failure_summary.txt
          echo "Repository: ${{ github.repository }}" >> ./artifacts/failure_summary.txt
          echo "Commit: ${{ github.sha }}" >> ./artifacts/failure_summary.txt

      - name: Upload crash artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        if: failure()
        with:
          name: fuzzing-artifacts-${{ github.run_id }}
          path: ./artifacts/
          retention-days: 30
 