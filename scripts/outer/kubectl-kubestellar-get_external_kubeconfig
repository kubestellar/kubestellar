#!/usr/bin/env bash

# Copyright 2023 The KubeStellar Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Purpose: Get the KubeStellar kubectl configuration when running externally to the cluster hosting Kubestellar.

# Usage: $0 (-o output-pathname | -X | kubectl_flag)*

output_pathname=""
kubectl_flags=()

while (( $# > 0 )); do
    case "$1" in
	(-h|--help)
	    echo "Usage: kubectl kubestellar get-external-kubeconfig (\$kubectl_flag | -o \$ouptut_pathname)*"
	    exit 0;;
	(-o)
	    if (( $# >1 ))
	    then output_pathname="$2"; shift
	    else echo "$0: missing output pathname value" >&2; exit 1
	    fi;;
	(--*=*|-?=*)
	    kubectl_flags[${#kubectl_flags[*]}]="$1";;
	(-X) set -x;;
	(--*|-?)
	    kubectl_flags[${#kubectl_flags[*]}]="$1"
	    if (( $# > 1 )); then 
		 kubectl_flags[${#kubectl_flags[*]}]="$2"
		 shift
	    fi;;
	(-*)
	    echo "$0: flag syntax error" >&2
	    exit 1;;
	(*)
	    echo "$0: no positional arguments accepted" >&2
	    exit 1
    esac
    shift
done

if [ -z "$output_pathname" ]; then
    echo "$0: must be given a non-empty -o" >&2
    exit 1
fi

set -e

while ! server_pod=$(kubectl "${kubectl_flags[@]}" get pods -l app=kubestellar -o jsonpath='{.items[0].metadata.name}' 2> /dev/null); do
    sleep 10
done

while ! kubectl "${kubectl_flags[@]}" exec $server_pod -c init -- ls /home/kubestellar/ready &> /dev/null; do
    sleep 10
done

kubectl "${kubectl_flags[@]}" get secrets kubestellar -o jsonpath='{.data.external\.kubeconfig}' | base64 -d > $output_pathname
