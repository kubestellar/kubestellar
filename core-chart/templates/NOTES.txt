For your convenience you will probably want to add contexts to your
kubeconfig named after the non-host-type control planes (WDSes and
ITSes) that you just created (a host-type control plane is just an
alias for the KubeFlex hosting cluster). You can do that with the
following `kflex` commands; each creates a context and makes it the
current one. See
https://github.com/kubestellar/kubestellar/blob/main/docs/content/direct/core-chart.md#kubeconfig-files-and-contexts-for-control-planes
(replace "main" with "\{\{ .Values.KUBESTELLAR_VERSION \}\}" when
making the next release) for a way to do this without using `kflex`.

{{range $cp := (concat (.Values.ITSes | default list) (.Values.WDSes | default list) ) }}
{{- if ne $cp.type "host" }}
kubectl config delete-context {{ $cp.name }} || true
kflex ctx {{ $cp.name }}
{{- end }}
{{- end }}

Finally you can use `kflex ctx` to switch back to the kubeconfig
context for your KubeFlex hosting cluster.
