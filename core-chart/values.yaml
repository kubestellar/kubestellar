# Default values for KubeStellar-Core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


# Container/chart image versions. These values are set during the chart release process,
# please do not change them unless you know what you are doing.
HELM_VERSION: "3.16.1"
KUBECTL_VERSION: "1.31.0"
KUBESTELLAR_VERSION: "0.25.0-rc.1"
# TRANSPORT_VERSION: e.g., "0.24.0"; defaults to KUBESTELLAR_VERSION value, if not defined
CLUSTERADM_VERSION: "0.8.2"
OCM_STATUS_ADDON_VERSION: "0.2.0-rc12"


# Control controller log verbosity
# The "default" verbosity value will be used for all controllers unless a specific controller verbosity override is specified
verbosity:
  default: 2
  # Specific controller verbosity overrides:
  # kubestellar: 6
  # clusteradm: 6
  # status_controller: 6 DEPRECATED
  # status_agent: 6 DEPRECATED
  # transport: 6


# KubeFlex override values
kubeflex-operator:
  install: true
  # installPostgreSQL: true # automatically install the appropriate version of PostgreSQL required by KubeFlex
  # isOpenShift: false # set this variable to true when installing the chart in an OpenShift cluster
  # domain: localtest.me # used to define the DNS domain name used from outside the KubeFlex hosting cluster to reach that cluster's Ingress endpoint
  # externalPort: 9443 # used to set the port to access the Control Planes API
  # hostContainer: kubeflex-control-plane # used to set the name of the container that runs the KubeFlex hosting cluster
  # verbosity: 0 $ used to set the verbosity of KubeFlex controller (this is not impacted by the global VERBOSITY value)

# Configuration for the OCM Status Add-On Controller.
# v here takes precedence over verbosity.status_controller
status_controller: {}
  # v: 2

# Configuration for the OCM Status Add-On Agent.
# v here takes precedence over verbosity.status_agent.
status_agent:
  hub_burst: 10 # int Allowed burst in requests/sec for accessing the hub from the agent
  hub_qps: 5 # float Max average requests/sec for accessing the hub from the agent
  local_burst: 10 # int Allowed burst in requests/sec for accessing the local cluster from the agent
  local_qps: 5 # float Max average requests/sec for accessing the local cluster from the agent
  log_flush_frequency: "5s" # duration Maximum number of seconds between log flushes on the agent
  logging_format: text # string Sets the log format. Permitted formats: "json", "text". on the agent
  metrics_bind_addr: ":8080" # string [host]:port at which to listen for HTTP requests for Prometheus /metrics requests on the agent
  pprof_bind_addr: ":8082" # string [host]:port at which to listen for HTTP requests for go /debug/pprof requests on the agent
  # v: 0 # Level number for the log level verbosity on the agent
  vmodule: "" # pattern=N,... comma-separated list of pattern=N settings for file-filtered logging (only works for text log format) on the agent

# Determine if the Post Create Hooks should be installed by the chart
InstallPCHs: true

# Transport controller parameters
transport_controller:
  # [host]:port at which to listen for HTTP GET /metrics
  metrics_bind_addr: ":8090"
  # [host]:port at which to listen for HTTP GET /debug/pprof
  pprof_bind_addr: ":8092"
  # QPS and burst for accessing the ITS
  transport_qps: 5
  transport_burst: 10
  # QPS and burst for accessing the WDS
  wds_qps: 5
  wds_burst: 10
  # Bundling parameters
  max_num_wrapped: 512000
  max_size_wrapped: 512000


# List the Inventory and Transport Spaces (ITSes) to be created by the chart
# Each ITS consists of a mandatory unique name and an optional type, which could be either host or vcluster (default to vcluster, if not specified)
ITSes: # all the CPs in this list will execute the its.yaml PCH
  # - name: its1 # name of the control plane
  #   type: host # optional type of control plane host or vcluster (default to vcluster, if not specified)
  # - name: its2 # name of the control plane
  #   type: host # optional type of control plane host or vcluster (default to vcluster, if not specified)


# List the Workload Description Spaces (WDSes) to be created by the chart
# Each WDS consists of a mandatory unique name and several optional parameters:
# - type: host or k8s (default to k8s, if not specified)
# - APIGroups: string holding a comma-separated list of APIGroups
# - ITSName: the name of the ITS control plane to be used by the WDS. Note that the ITSName MUST be specified if more than one ITS exists at the moment the WDS PCH starts.
WDSes: # all the CPs in this list will execute the wds.yaml PCH
  # - name: wds1 # name of the control plane
  #   type: host # optional type of control plane host or k8s (default to k8s, if not specified)
  #   APIGroups: "" # optional string holding a comma-separated list of APIGroups
  #   ITSName: its1 # optional name of the ITS control plane, this MUST be specified if more than one ITS exists at the moment the WDS PCH starts