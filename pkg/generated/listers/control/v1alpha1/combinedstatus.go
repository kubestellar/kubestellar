/*
Copyright The KubeStellar Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"

	v1alpha1 "github.com/kubestellar/kubestellar/api/control/v1alpha1"
)

// CombinedStatusLister helps list CombinedStatuses.
// All objects returned here must be treated as read-only.
type CombinedStatusLister interface {
	// List lists all CombinedStatuses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CombinedStatus, err error)
	// CombinedStatuses returns an object that can list and get CombinedStatuses.
	CombinedStatuses(namespace string) CombinedStatusNamespaceLister
	CombinedStatusListerExpansion
}

// combinedStatusLister implements the CombinedStatusLister interface.
type combinedStatusLister struct {
	listers.ResourceIndexer[*v1alpha1.CombinedStatus]
}

// NewCombinedStatusLister returns a new CombinedStatusLister.
func NewCombinedStatusLister(indexer cache.Indexer) CombinedStatusLister {
	return &combinedStatusLister{listers.New[*v1alpha1.CombinedStatus](indexer, v1alpha1.Resource("combinedstatus"))}
}

// CombinedStatuses returns an object that can list and get CombinedStatuses.
func (s *combinedStatusLister) CombinedStatuses(namespace string) CombinedStatusNamespaceLister {
	return combinedStatusNamespaceLister{listers.NewNamespaced[*v1alpha1.CombinedStatus](s.ResourceIndexer, namespace)}
}

// CombinedStatusNamespaceLister helps list and get CombinedStatuses.
// All objects returned here must be treated as read-only.
type CombinedStatusNamespaceLister interface {
	// List lists all CombinedStatuses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CombinedStatus, err error)
	// Get retrieves the CombinedStatus from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CombinedStatus, error)
	CombinedStatusNamespaceListerExpansion
}

// combinedStatusNamespaceLister implements the CombinedStatusNamespaceLister
// interface.
type combinedStatusNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.CombinedStatus]
}
