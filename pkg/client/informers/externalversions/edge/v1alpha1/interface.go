//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The KubeStellar Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by kcp code-generator. DO NOT EDIT.

package v1alpha1

import (
	"github.com/kcp-dev/edge-mc/pkg/client/informers/externalversions/internalinterfaces"
)

type ClusterInterface interface {
	// ClusterProviderDescs returns a ClusterProviderDescClusterInformer
	ClusterProviderDescs() ClusterProviderDescClusterInformer
	// Customizers returns a CustomizerClusterInformer
	Customizers() CustomizerClusterInformer
	// EdgePlacements returns a EdgePlacementClusterInformer
	EdgePlacements() EdgePlacementClusterInformer
	// EdgeSyncConfigs returns a EdgeSyncConfigClusterInformer
	EdgeSyncConfigs() EdgeSyncConfigClusterInformer
	// LogicalClusters returns a LogicalClusterClusterInformer
	LogicalClusters() LogicalClusterClusterInformer
	// SinglePlacementSlices returns a SinglePlacementSliceClusterInformer
	SinglePlacementSlices() SinglePlacementSliceClusterInformer
	// SyncerConfigs returns a SyncerConfigClusterInformer
	SyncerConfigs() SyncerConfigClusterInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new ClusterInterface.
func New(f internalinterfaces.SharedInformerFactory, tweakListOptions internalinterfaces.TweakListOptionsFunc) ClusterInterface {
	return &version{factory: f, tweakListOptions: tweakListOptions}
}

// ClusterProviderDescs returns a ClusterProviderDescClusterInformer
func (v *version) ClusterProviderDescs() ClusterProviderDescClusterInformer {
	return &clusterProviderDescClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Customizers returns a CustomizerClusterInformer
func (v *version) Customizers() CustomizerClusterInformer {
	return &customizerClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgePlacements returns a EdgePlacementClusterInformer
func (v *version) EdgePlacements() EdgePlacementClusterInformer {
	return &edgePlacementClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgeSyncConfigs returns a EdgeSyncConfigClusterInformer
func (v *version) EdgeSyncConfigs() EdgeSyncConfigClusterInformer {
	return &edgeSyncConfigClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// LogicalClusters returns a LogicalClusterClusterInformer
func (v *version) LogicalClusters() LogicalClusterClusterInformer {
	return &logicalClusterClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SinglePlacementSlices returns a SinglePlacementSliceClusterInformer
func (v *version) SinglePlacementSlices() SinglePlacementSliceClusterInformer {
	return &singlePlacementSliceClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SyncerConfigs returns a SyncerConfigClusterInformer
func (v *version) SyncerConfigs() SyncerConfigClusterInformer {
	return &syncerConfigClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

type Interface interface {
	// ClusterProviderDescs returns a ClusterProviderDescInformer
	ClusterProviderDescs() ClusterProviderDescInformer
	// Customizers returns a CustomizerInformer
	Customizers() CustomizerInformer
	// EdgePlacements returns a EdgePlacementInformer
	EdgePlacements() EdgePlacementInformer
	// EdgeSyncConfigs returns a EdgeSyncConfigInformer
	EdgeSyncConfigs() EdgeSyncConfigInformer
	// LogicalClusters returns a LogicalClusterInformer
	LogicalClusters() LogicalClusterInformer
	// SinglePlacementSlices returns a SinglePlacementSliceInformer
	SinglePlacementSlices() SinglePlacementSliceInformer
	// SyncerConfigs returns a SyncerConfigInformer
	SyncerConfigs() SyncerConfigInformer
}

type scopedVersion struct {
	factory          internalinterfaces.SharedScopedInformerFactory
	tweakListOptions internalinterfaces.TweakListOptionsFunc
	namespace        string
}

// New returns a new ClusterInterface.
func NewScoped(f internalinterfaces.SharedScopedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &scopedVersion{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// ClusterProviderDescs returns a ClusterProviderDescInformer
func (v *scopedVersion) ClusterProviderDescs() ClusterProviderDescInformer {
	return &clusterProviderDescScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Customizers returns a CustomizerInformer
func (v *scopedVersion) Customizers() CustomizerInformer {
	return &customizerScopedInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// EdgePlacements returns a EdgePlacementInformer
func (v *scopedVersion) EdgePlacements() EdgePlacementInformer {
	return &edgePlacementScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgeSyncConfigs returns a EdgeSyncConfigInformer
func (v *scopedVersion) EdgeSyncConfigs() EdgeSyncConfigInformer {
	return &edgeSyncConfigScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// LogicalClusters returns a LogicalClusterInformer
func (v *scopedVersion) LogicalClusters() LogicalClusterInformer {
	return &logicalClusterScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SinglePlacementSlices returns a SinglePlacementSliceInformer
func (v *scopedVersion) SinglePlacementSlices() SinglePlacementSliceInformer {
	return &singlePlacementSliceScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SyncerConfigs returns a SyncerConfigInformer
func (v *scopedVersion) SyncerConfigs() SyncerConfigInformer {
	return &syncerConfigScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
