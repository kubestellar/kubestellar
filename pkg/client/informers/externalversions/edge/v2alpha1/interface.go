//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The KubeStellar Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by kcp code-generator. DO NOT EDIT.

package v2alpha1

import (
	"github.com/kubestellar/kubestellar/pkg/client/informers/externalversions/internalinterfaces"
)

type ClusterInterface interface {
	// Customizers returns a CustomizerClusterInformer
	Customizers() CustomizerClusterInformer
	// EdgePlacements returns a EdgePlacementClusterInformer
	EdgePlacements() EdgePlacementClusterInformer
	// EdgePlacementDecisions returns a EdgePlacementDecisionClusterInformer
	EdgePlacementDecisions() EdgePlacementDecisionClusterInformer
	// EdgeSyncConfigs returns a EdgeSyncConfigClusterInformer
	EdgeSyncConfigs() EdgeSyncConfigClusterInformer
	// SinglePlacementSlices returns a SinglePlacementSliceClusterInformer
	SinglePlacementSlices() SinglePlacementSliceClusterInformer
	// SyncerConfigs returns a SyncerConfigClusterInformer
	SyncerConfigs() SyncerConfigClusterInformer
	// SyncTargets returns a SyncTargetClusterInformer
	SyncTargets() SyncTargetClusterInformer
	// Locations returns a LocationClusterInformer
	Locations() LocationClusterInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new ClusterInterface.
func New(f internalinterfaces.SharedInformerFactory, tweakListOptions internalinterfaces.TweakListOptionsFunc) ClusterInterface {
	return &version{factory: f, tweakListOptions: tweakListOptions}
}

// Customizers returns a CustomizerClusterInformer
func (v *version) Customizers() CustomizerClusterInformer {
	return &customizerClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgePlacements returns a EdgePlacementClusterInformer
func (v *version) EdgePlacements() EdgePlacementClusterInformer {
	return &edgePlacementClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgePlacementDecisions returns a EdgePlacementDecisionClusterInformer
func (v *version) EdgePlacementDecisions() EdgePlacementDecisionClusterInformer {
	return &edgePlacementDecisionClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgeSyncConfigs returns a EdgeSyncConfigClusterInformer
func (v *version) EdgeSyncConfigs() EdgeSyncConfigClusterInformer {
	return &edgeSyncConfigClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SinglePlacementSlices returns a SinglePlacementSliceClusterInformer
func (v *version) SinglePlacementSlices() SinglePlacementSliceClusterInformer {
	return &singlePlacementSliceClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SyncerConfigs returns a SyncerConfigClusterInformer
func (v *version) SyncerConfigs() SyncerConfigClusterInformer {
	return &syncerConfigClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SyncTargets returns a SyncTargetClusterInformer
func (v *version) SyncTargets() SyncTargetClusterInformer {
	return &syncTargetClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Locations returns a LocationClusterInformer
func (v *version) Locations() LocationClusterInformer {
	return &locationClusterInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

type Interface interface {
	// Customizers returns a CustomizerInformer
	Customizers() CustomizerInformer
	// EdgePlacements returns a EdgePlacementInformer
	EdgePlacements() EdgePlacementInformer
	// EdgePlacementDecisions returns a EdgePlacementDecisionInformer
	EdgePlacementDecisions() EdgePlacementDecisionInformer
	// EdgeSyncConfigs returns a EdgeSyncConfigInformer
	EdgeSyncConfigs() EdgeSyncConfigInformer
	// SinglePlacementSlices returns a SinglePlacementSliceInformer
	SinglePlacementSlices() SinglePlacementSliceInformer
	// SyncerConfigs returns a SyncerConfigInformer
	SyncerConfigs() SyncerConfigInformer
	// SyncTargets returns a SyncTargetInformer
	SyncTargets() SyncTargetInformer
	// Locations returns a LocationInformer
	Locations() LocationInformer
}

type scopedVersion struct {
	factory          internalinterfaces.SharedScopedInformerFactory
	tweakListOptions internalinterfaces.TweakListOptionsFunc
	namespace        string
}

// New returns a new ClusterInterface.
func NewScoped(f internalinterfaces.SharedScopedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &scopedVersion{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Customizers returns a CustomizerInformer
func (v *scopedVersion) Customizers() CustomizerInformer {
	return &customizerScopedInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// EdgePlacements returns a EdgePlacementInformer
func (v *scopedVersion) EdgePlacements() EdgePlacementInformer {
	return &edgePlacementScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgePlacementDecisions returns a EdgePlacementDecisionInformer
func (v *scopedVersion) EdgePlacementDecisions() EdgePlacementDecisionInformer {
	return &edgePlacementDecisionScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EdgeSyncConfigs returns a EdgeSyncConfigInformer
func (v *scopedVersion) EdgeSyncConfigs() EdgeSyncConfigInformer {
	return &edgeSyncConfigScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SinglePlacementSlices returns a SinglePlacementSliceInformer
func (v *scopedVersion) SinglePlacementSlices() SinglePlacementSliceInformer {
	return &singlePlacementSliceScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SyncerConfigs returns a SyncerConfigInformer
func (v *scopedVersion) SyncerConfigs() SyncerConfigInformer {
	return &syncerConfigScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SyncTargets returns a SyncTargetInformer
func (v *scopedVersion) SyncTargets() SyncTargetInformer {
	return &syncTargetScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Locations returns a LocationInformer
func (v *scopedVersion) Locations() LocationInformer {
	return &locationScopedInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
