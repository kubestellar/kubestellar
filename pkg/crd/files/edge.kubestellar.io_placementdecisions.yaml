---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: placementdecisions.edge.kubestellar.io
spec:
  group: edge.kubestellar.io
  names:
    kind: PlacementDecision
    listKind: PlacementDecisionList
    plural: placementdecisions
    shortNames:
    - pd
    singular: placementdecision
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PlacementDecision is mapped 1:1 to a single Placement object.
          The decision resource reflects the resolution of the Placement's selectors,
          and explicitly reflects which objects should go to what destinations.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: '`spec` explicitly describes a desired binding between workloads
              and Locations. It reflects the resolution of a Placement''s selectors.'
            properties:
              destinations:
                description: '`destinations` is a list of cluster-identifiers that
                  the objects should be propagated to.'
                items:
                  description: Destination wraps the identifiers required to uniquely
                    identify a destination cluster.
                  properties:
                    clusterId:
                      type: string
                  type: object
                type: array
              workload:
                description: '`Workload` is a collection of namespaced-scoped objects
                  and a collection of cluster-scoped objects to be propagated to destination
                  clusters.'
                properties:
                  clusterScope:
                    description: '`clusterScope` holds a list of individual cluster-scoped
                      objects to downsync, organized by resource. Remember that a
                      "resource" is a kind/type/sort of objects, not an individual
                      object.'
                    items:
                      properties:
                        group:
                          type: string
                        objectNames:
                          description: '`objectNames` holds the names of the objects
                            of this kind to downsync. Empty list means none of them.'
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - resource
                      - version
                      type: object
                    type: array
                  namespaceScope:
                    description: '`NamespaceScope` matches if and only if at least
                      one member matches.'
                    items:
                      description: NamespaceScopeDownsyncObjects matches some objects
                        of one particular namespaced object.
                      properties:
                        group:
                          type: string
                        objectsByNamespace:
                          description: '`objectsByNamespace` matches by namespace
                            and name. An object matches the list if and only if the
                            object matches at least one member of the list. Thus,
                            no object matches the empty list.'
                          items:
                            description: NamespaceAndNames identifies some objects
                              of an implied resource that is namespaced. The objects
                              are all in the same namespace.
                            properties:
                              names:
                                description: '`names` holds the names of the objects
                                  that match. Empty list means none of them.'
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: '`namespace` identifies the namespace'
                                type: string
                            required:
                            - namespace
                            type: object
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      required:
                      - group
                      - resource
                      - version
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: '`status` describes the status of the process of binding
              workloads to Locations.'
            properties:
              observedGeneration:
                description: observedGeneration represents the .metadata.generation
                  that the status is based upon. For instance, if .metadata.generation
                  is currently 12, but the .status.observedGeneration is 9, the status
                  is out of date with respect to the current state of the PlacementDecision
                  instance. Zero means that no status has yet been written here.
                format: int64
                minimum: 0
                type: integer
              propagatedWorkloadsCount:
                description: '`propagatedWorkloadsCount` represents the number of
                  different destinations that got a copy of the wrapped object that
                  contains all the objects in the `spec.workload` into their dedicated
                  mailbox namespace.'
                type: integer
            type: object
        type: object
    served: true
    storage: true
